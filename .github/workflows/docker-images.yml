name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE: slundi/rust-musl-docker-build-multi-arch
  PLATFORMS: linux/arm/v7,linux/arm64,linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
#multi-arch: https://dev.to/cloudx/multi-arch-docker-images-the-easy-way-with-github-actions-4k54
    steps:
    - name: Create Docker image names
      id: create-docker-image-names
      uses: actions/github-script@v5
      with:
        script: |
          const dockerImageNames = [];
          if (context.payload.ref === 'refs/heads/main') {
            dockerImageNames.push('slundi/ratioup:latest');
          }
          const matched = context.payload.ref.match(/^refs\/tags\/(.*)$/);
          if (matched !== null) {
            dockerImageNames.push(`slundi/rust-musl-docker-build-multi-arch:${matched[1]}`);
          }
          console.log('dockerImageNames:', dockerImageNames);
          const shouldPush = dockerImageNames.length !== 0;
          core.setOutput('docker-push', shouldPush + "");
          core.setOutput('docker-image-names', shouldPush ? dockerImageNames.join(",") : "dummy_image_name_not_to_push");
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#    - name: Docker meta
#      id: meta # you'll use this in the next step
#      uses: docker/metadata-action@v3
#      with:
#        images: ${{ env.IMAGE }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        image: ${{ env.IMAGE }}
        platforms: ${{ env.PLATFORMS }}
        push: ${{ steps.create-docker-image-names.outputs.docker-push }}
        tags: ${{ steps.create-docker-image-names.outputs.docker-image-names }}
